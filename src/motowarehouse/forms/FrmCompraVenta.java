
package motowarehouse.forms;

import java.awt.Toolkit;
import java.awt.TrayIcon.MessageType;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.TextStyle;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import motowarehouse.enums.Departamentos;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import motwarehouse.utils.ConfigurationFileCtx;
import motwarehouse.utils.CreditoModel;
import motwarehouse.utils.HandleStringsUtils;
import motwarehouse.utils.MunicipiosUtils;
import motwarehouse.utils.NumberToLetterConverter;
import motwarehouse.utils.ReadFileTxt;

/**
 *
 * @author Luis E. Vásquez
 */
public class FrmCompraVenta extends javax.swing.JFrame {
    
    private ConfigurationFileCtx fileContext;
    private FrmCredito frmCrd;
    private static boolean profileJAR = true;
    
    /**
     * Creates new form FrmCompraVenta
     * @throws java.text.ParseException
     */
    public FrmCompraVenta() throws FileNotFoundException {
        initComponents();
        initLabelFechas();
        initComboDepartamentos();
        initComboTipo();
        initAllCombos();
        jYearChooser();

        frmCrd = new FrmCredito();
        btnCredito.setEnabled(false);
        
        lblErrorMsg.setVisible(false);
        
        chkDui.setState(true);
        txtVIN.setText("N/T DE FABRICA");
        txtVIN.setEnabled(false);
        
        // ButtonnGroup
        radioHombre.setActionCommand("M");
        radioMujer.setActionCommand("F");
        buttonGroup.add(radioHombre);
        buttonGroup.add(radioMujer);
        
        // ButtonGroup tipo venta
        radioContado.setActionCommand("CON");
        radioCredito.setActionCommand("CRE");
        btnTipoVenta.add(radioContado);
        btnTipoVenta.add(radioCredito);
        
        radioPasaporte.setActionCommand("PASAPORTE");
        radioCarnet.setActionCommand("CARNET");
        btnDocumentoPer.add(radioPasaporte);
        btnDocumentoPer.add(radioCarnet);
        
        // deshabilitar 
        disabledRadioButtonDocumento(false);

        // cargamos el contexto de la configuracion
        fileContext = new ConfigurationFileCtx();   
        
        //
        btnAgregarMarca.setVisible(false);
        btnAgregarMod.setVisible(false);
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appLogo.png")));
        this.setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        btnTipoVenta = new javax.swing.ButtonGroup();
        btnDocumentoPer = new javax.swing.ButtonGroup();
        jpPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        txtDUI = new javax.swing.JFormattedTextField();
        txtNIT = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbDepartamentos = new javax.swing.JComboBox<>();
        cmbMunicipios = new javax.swing.JComboBox<>();
        txtProfesionOfi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        radioHombre = new javax.swing.JRadioButton();
        radioMujer = new javax.swing.JRadioButton();
        txtPasaporte = new javax.swing.JTextField();
        radioCarnet = new javax.swing.JRadioButton();
        radioPasaporte = new javax.swing.JRadioButton();
        chkDui = new java.awt.Checkbox();
        txtConfig = new javax.swing.JTextField();
        btnLoadConf = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        btnAgregarMarca = new javax.swing.JButton();
        lbhora = new javax.swing.JLabel();
        lbtxthora = new javax.swing.JLabel();
        lbfecha = new javax.swing.JLabel();
        lbtxtfecha = new javax.swing.JLabel();
        radioCredito = new javax.swing.JRadioButton();
        radioContado = new javax.swing.JRadioButton();
        lblMotocicleta = new javax.swing.JLabel();
        lblClase = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmbMarca = new javax.swing.JComboBox<>();
        cmbModelos = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        lblMotor = new javax.swing.JLabel();
        txtMotor = new javax.swing.JFormattedTextField();
        txtChasis = new javax.swing.JTextField();
        lblChasis = new javax.swing.JLabel();
        lblChasis2 = new javax.swing.JLabel();
        txtVIN = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        lblChasis1 = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        txtPoliza = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        chkVIN = new java.awt.Checkbox();
        yearModel = new com.toedter.calendar.JYearChooser();
        lblAnioModelo = new javax.swing.JLabel();
        btnImprimirIPM = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnImprimir1 = new javax.swing.JButton();
        btnAgregarMod = new javax.swing.JButton();
        lblErrorMsg = new javax.swing.JLabel();
        btnCredito = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos personales"));
        jpPrincipal.setToolTipText("Datos para el reporte");

        jLabel1.setText("Nombres:");

        jLabel2.setText("Edad:");

        jLabel3.setText("DUI:");

        jLabel4.setText("NIT:");

        jLabel5.setText("Apellidos:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(18, 10, 150, 1));

        try {
            txtDUI.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtNIT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-######-###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("años");

        cmbDepartamentos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDepartamentosItemStateChanged(evt);
            }
        });
        cmbDepartamentos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbDepartamentosPropertyChange(evt);
            }
        });

        jLabel8.setText("Prof./Oficio:");

        jLabel9.setText("Departamento:");

        jLabel10.setText("Domicilio:");

        radioHombre.setText("Hombre");
        radioHombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioHombreActionPerformed(evt);
            }
        });

        radioMujer.setText("Mujer");
        radioMujer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMujerActionPerformed(evt);
            }
        });

        txtPasaporte.setEnabled(false);

        radioCarnet.setText("Carnet de Residente");

        radioPasaporte.setText("Pasaporte");

        chkDui.setState(true);
        chkDui.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDuiItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
        jpPrincipal.setLayout(jpPrincipalLayout);
        jpPrincipalLayout.setHorizontalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpPrincipalLayout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel8)
                                .addComponent(jLabel5)
                                .addComponent(jLabel1)
                                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                                        .addComponent(chkDui, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel10))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProfesionOfi, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMunicipios, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPasaporte, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDUI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                    .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jpPrincipalLayout.createSequentialGroup()
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)
                            .addGap(62, 62, 62)
                            .addComponent(radioHombre)
                            .addGap(2, 2, 2)
                            .addComponent(radioMujer))
                        .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNIT, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpPrincipalLayout.createSequentialGroup()
                                .addComponent(radioPasaporte)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioCarnet)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jpPrincipalLayout.setVerticalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtProfesionOfi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDepartamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMunicipios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPrincipalLayout.createSequentialGroup()
                        .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPasaporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioCarnet)
                            .addComponent(radioPasaporte)))
                    .addComponent(chkDui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(radioHombre)
                    .addComponent(radioMujer)
                    .addComponent(jLabel2))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnLoadConf.setText("...");
        btnLoadConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadConfActionPerformed(evt);
            }
        });

        lblHeader.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        lblHeader.setText("FORMULARIO PARA REPORTE COMPRA/VENTA");

        btnAgregarMarca.setBackground(new java.awt.Color(204, 255, 153));
        btnAgregarMarca.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnAgregarMarca.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarMarca.setText("Agregar Marca");
        btnAgregarMarca.setMaximumSize(new java.awt.Dimension(4178, 4112));
        btnAgregarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMarcaActionPerformed(evt);
            }
        });

        lbhora.setText("jLabel4");

        lbtxthora.setText("Hora:");

        lbfecha.setText("jLabel3");

        lbtxtfecha.setText("Fecha:");

        radioCredito.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        radioCredito.setText("Crédito");
        radioCredito.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioCreditoItemStateChanged(evt);
            }
        });
        radioCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCreditoActionPerformed(evt);
            }
        });
        radioCredito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                radioCreditoKeyPressed(evt);
            }
        });

        radioContado.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        radioContado.setText("Contado");

        lblMotocicleta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMotocicleta.setText("Motocicleta");

        lblClase.setText("Clase:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la motocicleta"));

        cmbMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMarcaItemStateChanged(evt);
            }
        });
        cmbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaActionPerformed(evt);
            }
        });
        cmbMarca.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbMarcaPropertyChange(evt);
            }
        });

        cmbModelos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModelosItemStateChanged(evt);
            }
        });
        cmbModelos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbModelosPropertyChange(evt);
            }
        });

        jLabel14.setText("Modelo:");

        lblMotor.setText("Motor:");

        try {
            txtMotor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("******************************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblChasis.setText("Chasis:");

        lblChasis2.setText("VIN:");

        lblChasis1.setText("Color:");

        lblPrecio.setText("Precio $:");

        txtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#######################"))));
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        jLabel13.setText("Marca:");

        try {
            txtPoliza.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("4-#####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Poliza No.");

        jLabel12.setText("Tipo:");

        cmbTipo.setToolTipText("TURISMO, SCOOTER, DEPORTIVO, TODO TERRENO");
        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });
        cmbTipo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbTipoPropertyChange(evt);
            }
        });

        chkVIN.setState(true);
        chkVIN.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkVINItemStateChanged(evt);
            }
        });

        lblAnioModelo.setText("Año del modelo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtPoliza, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMotor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblChasis1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPrecio, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(chkVIN, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblChasis2))
                                .addComponent(lblChasis, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbModelos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVIN, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtChasis, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAnioModelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearModel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtPoliza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbModelos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMotor))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChasis))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblChasis2))
                    .addComponent(chkVIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChasis1))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPrecio)
                        .addComponent(lblAnioModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(yearModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnImprimirIPM.setBackground(new java.awt.Color(204, 255, 153));
        btnImprimirIPM.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnImprimirIPM.setForeground(new java.awt.Color(0, 0, 0));
        btnImprimirIPM.setText("Autorización IPM");
        btnImprimirIPM.setMaximumSize(new java.awt.Dimension(4178, 4112));
        btnImprimirIPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirIPMActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(255, 204, 102));
        btnLimpiar.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setMaximumSize(new java.awt.Dimension(4178, 4112));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnImprimir1.setBackground(new java.awt.Color(204, 255, 153));
        btnImprimir1.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnImprimir1.setForeground(new java.awt.Color(0, 0, 0));
        btnImprimir1.setText("Imprimir");
        btnImprimir1.setMaximumSize(new java.awt.Dimension(4178, 4112));
        btnImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir1ActionPerformed(evt);
            }
        });

        btnAgregarMod.setBackground(new java.awt.Color(204, 255, 153));
        btnAgregarMod.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        btnAgregarMod.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarMod.setText("Agregar modelo");
        btnAgregarMod.setMaximumSize(new java.awt.Dimension(4178, 4112));
        btnAgregarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarModActionPerformed(evt);
            }
        });

        lblErrorMsg.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblErrorMsg.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/motowarehouse/img/error.png"))); // NOI18N
        lblErrorMsg.setText("error::messages");

        btnCredito.setText("...");
        btnCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblClase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMotocicleta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLoadConf)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioContado)
                                .addGap(18, 18, 18)
                                .addComponent(radioCredito)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCredito))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnImprimirIPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lbtxtfecha)
                                            .addGap(18, 18, 18)
                                            .addComponent(lbfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(7, 7, 7)
                                            .addComponent(lbtxthora)
                                            .addGap(18, 18, 18)
                                            .addComponent(lbhora, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(28, 28, 28)
                                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioContado)
                            .addComponent(radioCredito)
                            .addComponent(btnCredito)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregarMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbhora)
                                .addComponent(lbtxthora)
                                .addComponent(lbfecha)
                                .addComponent(lbtxtfecha))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblClase)
                                .addComponent(lblMotocicleta)
                                .addComponent(txtConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLoadConf)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImprimirIPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(lblErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );

        jpPrincipal.getAccessibleContext().setAccessibleDescription("Datos personales");
        jPanel1.getAccessibleContext().setAccessibleName("Datos del vehiculo");
        jPanel1.getAccessibleContext().setAccessibleDescription("Datos del vehiculo");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadConfActionPerformed
        txtConfig.setText(fileContext.showDialogLoadFile());
        fileContext.loadFile();
    }//GEN-LAST:event_btnLoadConfActionPerformed

    private void btnAgregarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMarcaActionPerformed
        String m = JOptionPane.showInputDialog(null, "Descripcion de la marca:", 
                "Agregar un registro en memoria", JOptionPane.INFORMATION_MESSAGE);
        cmbMarca.addItem(m.trim().toUpperCase());
        cmbMarca.setSelectedItem(m.trim().toUpperCase());
    }//GEN-LAST:event_btnAgregarMarcaActionPerformed

    private void cmbDepartamentosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbDepartamentosPropertyChange
        String dep = (String) cmbDepartamentos.getSelectedItem();
        if(dep != null) {
            cmbMunicipios.setModel(new DefaultComboBoxModel<>(MunicipiosUtils.getNombresUpper(dep)));
        }
    }//GEN-LAST:event_cmbDepartamentosPropertyChange

    private void cmbDepartamentosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDepartamentosItemStateChanged
        String dep = (String) cmbDepartamentos.getSelectedItem();
        if(dep != null) {
            cmbMunicipios.setModel(new DefaultComboBoxModel<>(MunicipiosUtils.getNombresUpper(dep)));
        }
    }//GEN-LAST:event_cmbDepartamentosItemStateChanged

    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoItemStateChanged

    private void cmbTipoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbTipoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoPropertyChange

    private void radioHombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioHombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioHombreActionPerformed

    private void radioMujerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMujerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioMujerActionPerformed

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void cmbMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMarcaItemStateChanged
        String marca = (String) cmbMarca.getSelectedItem();
        if (marca != null) {
            ReadFileTxt read = new ReadFileTxt("");
            List<String> modelos = null;
            try {
                modelos = read.getModelos(marca);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[] fill = new String[modelos.size()];
            modelos.toArray(fill);
            cmbModelos.setModel(new DefaultComboBoxModel<>(fill));
        }
    }//GEN-LAST:event_cmbMarcaItemStateChanged

    private void cmbMarcaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbMarcaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMarcaPropertyChange

    private void cmbModelosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModelosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModelosItemStateChanged

    private void cmbModelosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbModelosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModelosPropertyChange

    private void chkDuiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDuiItemStateChanged
        if(chkDui.getState()) {
            txtPasaporte.setEnabled(false);
            txtPasaporte.setText("");
            txtDUI.setEnabled(true);
            disabledRadioButtonDocumento(false);
        } else {
            txtDUI.setEnabled(false);
            txtDUI.setValue("");
            txtPasaporte.setEnabled(true);
            disabledRadioButtonDocumento(true);
        }
        
    }//GEN-LAST:event_chkDuiItemStateChanged

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        lblErrorMsg.setVisible(false);

        // Primer seccion
        txtNombres.setText("");
        txtApellidos.setText("");
        txtProfesionOfi.setText("");
        cmbDepartamentos.setSelectedIndex(0);
        cmbMunicipios.setSelectedIndex(0);
        txtDUI.setText("");
        txtPasaporte.setText("");
        txtPasaporte.setEnabled(false);
        chkDui.setState(true);
        disabledRadioButtonDocumento(false);
        txtDUI.setEnabled(true);
        txtNIT.setText("");
        jSpinner1.setValue(18);
        buttonGroup.clearSelection();

        // Segunda seccion
        txtPoliza.setText("");
        txtMotor.setText("");
        txtChasis.setText("");
        
        txtColor.setText("");
        txtPrecio.setText("");
        chkVIN.setState(true);
        txtVIN.setText("N/T DE FABRICA");
        txtVIN.setEnabled(false);
        cmbTipo.setSelectedIndex(0);
        cmbMarca.setSelectedIndex(0);
        cmbModelos.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir1ActionPerformed
        
        boolean testMode = false;
        
        
        if (!testMode && checkForm()) {
            JasperReport reporte = null; // Instaciamos el objeto reporte
            String url = "\\src\\motowarehouse\\jasper\\";
            String path = "";
          
            HashMap parameters = new HashMap<>();
 
            if (!profileJAR) {
                if (btnTipoVenta.getSelection().getActionCommand() == "CRE") {
                    // Credito
                    path = System.getProperty("user.dir") + url + "rptCompraVentaCredito.jasper";
                    setParametersToReportCredito(parameters);
                } else {
                    // Contado
                    path = System.getProperty("user.dir") + url + "rptCompraVenta.jasper";
                    setParametersToReport(parameters);
                }
                
                try {
                    reporte = (JasperReport) JRLoader.loadObjectFromFile(path); //Se carga el reporte de su localizacion
                } catch (JRException ex) {
                    Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                if (btnTipoVenta.getSelection().getActionCommand() == "CRE") {
                    // Credito
                    InputStream jasperStream = getClass().getResourceAsStream("/motowarehouse/jasper/rptCompraVentaCredito.jasper");
                    try {
                        reporte = (JasperReport) JRLoader.loadObject(jasperStream);
                    } catch (JRException ex) {
                        Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    setParametersToReportCredito(parameters);
                } else {
                    InputStream jasperStream = getClass().getResourceAsStream("/motowarehouse/jasper/rptCompraVenta.jasper");
                    try {
                        reporte = (JasperReport) JRLoader.loadObject(jasperStream);
                    } catch (JRException ex) {
                        Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                    }
 
                    setParametersToReport(parameters);
                }
            }

            
            try {
                JasperPrint jprint = JasperFillManager.fillReport(reporte, parameters, new JREmptyDataSource()); //Agregamos los parametros para llenar el reporte
                JasperViewer viewer = new JasperViewer(jprint, false); //Se crea la vista del reportes
                viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Se declara con dispose_on_close para que no se cierre el programa cuando se cierre el reporte
                viewer.setVisible(true); //Se vizualiza el reporte
                
                lblErrorMsg.setVisible(false);
            } catch (JRException ex) {
                 System.out.println("error");
                System.out.println(ex.getMessage());

            }
        } 
        
        if(testMode) {
            JOptionPane.showMessageDialog(null, "value " + HandleStringsUtils.converNumbersToLetter(txtPoliza.getText()),
                    "Advertencia", MessageType.WARNING.ordinal());
            JOptionPane.showMessageDialog(null, "value " + HandleStringsUtils.converNumbersToLetter(txtMotor.getText()),
                    "Advertencia", MessageType.WARNING.ordinal());
        }
    }//GEN-LAST:event_btnImprimir1ActionPerformed

    private void btnAgregarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarModActionPerformed
        
    }//GEN-LAST:event_btnAgregarModActionPerformed

    private void cmbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaActionPerformed
       /*String marca = (Integer)JOptionPane.showInputDialog(null, "Pick a number that is not prime:", 
                "Prime numbers", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);*/
    }//GEN-LAST:event_cmbMarcaActionPerformed

    private void radioCreditoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_radioCreditoKeyPressed
       
    }//GEN-LAST:event_radioCreditoKeyPressed

    private void radioCreditoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioCreditoItemStateChanged
        if (btnTipoVenta.getSelection().getActionCommand() == "CRE") {
            btnCredito.setEnabled(true);
        } else {
            btnCredito.setEnabled(false);
        }
    }//GEN-LAST:event_radioCreditoItemStateChanged

    private void chkVINItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkVINItemStateChanged
        if(chkVIN.getState()) {
            txtVIN.setEnabled(false);
            txtVIN.setText("N/T DE FABRICA");
        } else {
            txtVIN.setEnabled(true);
            txtVIN.setText("");
        }
    }//GEN-LAST:event_chkVINItemStateChanged

    private void btnImprimirIPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirIPMActionPerformed
        boolean testMode = false;

        if (!testMode && checkForm()) {
            JasperReport reporte = null; // Instaciamos el objeto reporte
            HashMap parameters = new HashMap<>();
            setParametersAutIPM(parameters);

            if (!profileJAR) {
                try {
                    String url = "\\src\\motowarehouse\\jasper\\";
                    String path = System.getProperty("user.dir") + url + "rptAutIPM.jasper";
                    reporte = (JasperReport) JRLoader.loadObjectFromFile(path); //Se carga el reporte de su localizacion
                } catch (JRException ex) {
                    Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

                InputStream jasperStream = getClass().getResourceAsStream("/motowarehouse/jasper/rptAutIPM.jasper");
                try {
                    reporte = (JasperReport) JRLoader.loadObject(jasperStream);
                } catch (JRException ex) {
                    Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            try {
                JasperPrint jprint = JasperFillManager.fillReport(reporte, parameters, new JREmptyDataSource()); //Agregamos los parametros para llenar el reporte
                JasperViewer viewer = new JasperViewer(jprint, false); //Se crea la vista del reportes
                viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Se declara con dispose_on_close para que no se cierre el programa cuando se cierre el reporte
                viewer.setVisible(true); //Se vizualiza el reporte

                lblErrorMsg.setVisible(false);

            } catch (JRException ex) {

            }
        }

        if (testMode) {
        }
    }//GEN-LAST:event_btnImprimirIPMActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void radioCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCreditoActionPerformed
        
    }//GEN-LAST:event_radioCreditoActionPerformed

    private void btnCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditoActionPerformed
        frmCrd.pack();
        frmCrd.setVisible(true);
    }//GEN-LAST:event_btnCreditoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCompraVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCompraVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCompraVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCompraVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmCompraVenta().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(FrmCompraVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMarca;
    private javax.swing.JButton btnAgregarMod;
    private javax.swing.JButton btnCredito;
    private javax.swing.ButtonGroup btnDocumentoPer;
    private javax.swing.JButton btnImprimir1;
    private javax.swing.JButton btnImprimirIPM;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLoadConf;
    private javax.swing.ButtonGroup btnTipoVenta;
    private javax.swing.ButtonGroup buttonGroup;
    private java.awt.Checkbox chkDui;
    private java.awt.Checkbox chkVIN;
    private javax.swing.JComboBox<String> cmbDepartamentos;
    private javax.swing.JComboBox<String> cmbMarca;
    private javax.swing.JComboBox<String> cmbModelos;
    private javax.swing.JComboBox<String> cmbMunicipios;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JLabel lbfecha;
    private javax.swing.JLabel lbhora;
    private javax.swing.JLabel lblAnioModelo;
    private javax.swing.JLabel lblChasis;
    private javax.swing.JLabel lblChasis1;
    private javax.swing.JLabel lblChasis2;
    private javax.swing.JLabel lblClase;
    private javax.swing.JLabel lblErrorMsg;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblMotocicleta;
    private javax.swing.JLabel lblMotor;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lbtxtfecha;
    private javax.swing.JLabel lbtxthora;
    private javax.swing.JRadioButton radioCarnet;
    private javax.swing.JRadioButton radioContado;
    private javax.swing.JRadioButton radioCredito;
    private javax.swing.JRadioButton radioHombre;
    private javax.swing.JRadioButton radioMujer;
    private javax.swing.JRadioButton radioPasaporte;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtChasis;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtConfig;
    private javax.swing.JFormattedTextField txtDUI;
    private javax.swing.JFormattedTextField txtMotor;
    private javax.swing.JFormattedTextField txtNIT;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPasaporte;
    private javax.swing.JFormattedTextField txtPoliza;
    private javax.swing.JFormattedTextField txtPrecio;
    private javax.swing.JTextField txtProfesionOfi;
    private javax.swing.JTextField txtVIN;
    private com.toedter.calendar.JYearChooser yearModel;
    // End of variables declaration//GEN-END:variables

    private void initComboDepartamentos() {
        Departamentos[] d = Departamentos.values();
        String[] descripciones = new String[d.length];
        for (int i = 0; i < d.length; i++) {
            descripciones[i] = d[i].getDescripcion().toUpperCase();
        }

        cmbDepartamentos.setModel(new DefaultComboBoxModel<>(descripciones));
    }

    private void initLabelFechas() {
        // asignamos las fecha y hora
        lbfecha.setText(new SimpleDateFormat("ddMMYYYY").format(Calendar.getInstance().getTime()));
        lbhora.setText(new SimpleDateFormat("HHmmss").format(Calendar.getInstance().getTime()));
    }
    
    private void initComboTipo() {
        cmbTipo.addItem("TURISMO");
        cmbTipo.addItem("SCOOTER");
        cmbTipo.addItem("DEPORTIVO");
        cmbTipo.addItem("TERRENO");
    }
    
    private void initComboMarcas() throws FileNotFoundException {
        ReadFileTxt read = new ReadFileTxt("");
        List<String> modelos = read.getMarcas();
        
        for (String modelo : modelos) {
            cmbMarca.addItem(modelo);
        }
                
    }
    
    private void initComboModelos() throws FileNotFoundException {
        String marca = (String) cmbMarca.getSelectedItem();
        if (marca != null) {
            ReadFileTxt read = new ReadFileTxt("");
            List<String> modelos = read.getModelos(marca);

            for (String modelo : modelos) {
                cmbModelos.addItem(modelo);
            }
        }

    }
    
    private void initAllCombos() throws FileNotFoundException  {
        initComboMarcas();
        initComboModelos();
    }
    
    private boolean isSelectedRadioItems() {
        /* JOptionPane.showMessageDialog(null, obtenerNIT(),
                    "Advertencia", MessageType.WARNING.ordinal());*/
        boolean s = true;  
        if (buttonGroup.getSelection() == null) {
            /*JOptionPane.showMessageDialog(null, "Es importante seleccionar un género para generar la compra/venta.",
                    "Advertencia", MessageType.WARNING.ordinal());*/
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("Es importante seleccionar un género para generar la compra/venta.");
            s = false;
        }

        if (s && btnTipoVenta.getSelection() == null) {
            /*JOptionPane.showMessageDialog(null, "Es importante seleccionar el tipo de documento para generar la compra/venta.",
                    "Advertencia", MessageType.WARNING.ordinal());
            lblErrorMsg.setVisible(true);*/
            lblErrorMsg.setText("Es importante seleccionar el tipo de documento para generar la compra/venta.");
            s = false;
        }

        return s;
    }
    
    private boolean isTextBoxEmpty() {
        boolean txtIsEmpty = true;

        if ("".equals(txtNombres.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo nombre se encuentra vacio.");
            txtNombres.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtApellidos.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo apellido se encuentra vacio.");
            txtApellidos.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtProfesionOfi.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Profesión u oficio se encuentra vacio.");
            txtProfesionOfi.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(obtenerImpresionDocumento().replace("-", "").trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Documento se encuentra vacio.");
            txtDUI.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtDUI.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo DUI se encuentra vacio.");
            txtDUI.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtPoliza.getText().replace("4-", "").trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Poliza se encuentra vacio.");
            txtPoliza.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtMotor.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Motor se encuentra vacio.");
            txtMotor.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtChasis.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Chasis se encuentra vacio.");
            txtChasis.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtVIN.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo VIN se encuentra vacio.");
            txtVIN.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtColor.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo Color se encuentra vacio.");
            txtColor.requestFocus();
            txtIsEmpty = false;
        }

        if (txtIsEmpty && "".equals(txtPrecio.getText().trim())) {
            lblErrorMsg.setVisible(true);
            lblErrorMsg.setText("El campo precio se encuentra vacio.");
            txtPrecio.requestFocus();
            txtIsEmpty = false;
        }

        return txtIsEmpty;
    }

    private boolean checkForm() {
        boolean result = isSelectedRadioItems();
        if (result) {
            result = isTextBoxEmpty();
        }
        return result;
    }

    private void setParametersToReport(HashMap parameters) {
        String anio = new SimpleDateFormat("YYYY").format(Calendar.getInstance().getTime());
        String dia = new SimpleDateFormat("dd").format(Calendar.getInstance().getTime());
        anio = NumberToLetterConverter.convertNumberToLetter(anio);
        dia = NumberToLetterConverter.convertNumberToLetter(dia);

        if (parameters != null) {
            // Configuracion
            parameters.put("NOMBRE_REPRE", fileContext.getNombreRepresentante());
            parameters.put("GR", fileContext.getGenero());
            parameters.put("SOCIEDAD", fileContext.getNombreEmpresa());
            parameters.put("SOCIEDAD_ABREV", fileContext.getNombreAbrev());

            // Formulario
            parameters.put("NOMBRE", txtNombres.getText().toUpperCase() + " " + txtApellidos.getText().toUpperCase());
            parameters.put("ANIOS", NumberToLetterConverter.convertNumberToLetter(jSpinner1.getValue().toString()));
            parameters.put("PROFOFI", txtProfesionOfi.getText().toUpperCase());
            parameters.put("MUNI", cmbMunicipios.getSelectedItem());
            parameters.put("DEPA", cmbDepartamentos.getSelectedItem());
            parameters.put("POLIZA", HandleStringsUtils.converNumbersToLetter(txtPoliza.getText().toUpperCase()));
            parameters.put("MARCA", cmbMarca.getSelectedItem());
            parameters.put("MODELO", cmbMarca.getSelectedItem());
            parameters.put("ANIOMOTO", NumberToLetterConverter.convertNumberToLetter(String.valueOf(yearModel.getValue())));
            parameters.put("ANIOLETRA", anio);
            parameters.put("MOTOR", HandleStringsUtils.converNumbersToLetter(txtMotor.getText().toUpperCase()));
            parameters.put("CHASIS", HandleStringsUtils.converNumbersToLetter(txtChasis.getText().toUpperCase()));
            parameters.put("COLOR", txtColor.getText().toUpperCase());
            parameters.put("PRECIO", NumberToLetterConverter.convertNumberToLetter(txtPrecio.getText()));
            parameters.put("VIN", obtenerVIN());
            parameters.put("TIPO", cmbTipo.getSelectedItem());

            if (buttonGroup.getSelection().getActionCommand() == "M") {
                parameters.put("GA", "el");
                parameters.put("G", "or");
            } else {
                parameters.put("GA", "la");
                parameters.put("G", "ora");
            }

            // Obtienes el mes actual
            Month month = LocalDate.now().getMonth();

            // Obtienes el nombre del mes
            String nombreMes = month.getDisplayName(TextStyle.FULL, new Locale("es", "ES"));

            parameters.put("DIA", dia);
            parameters.put("MES", nombreMes.toUpperCase());
            parameters.put("TDOCUMENTO", obtenerImpresionTipoDocumento());
            parameters.put("DUI", HandleStringsUtils.converNumbersToLetter(obtenerImpresionDocumento()));
            parameters.put("NIT", HandleStringsUtils.converNumbersToLetter(obtenerNIT()));

            parameters.put("HORA",
                    NumberToLetterConverter.convertNumberToLetter(
                            new SimpleDateFormat("HH").format(Calendar.getInstance().getTime())) + " Horas");

            parameters.put("MIN",
                    NumberToLetterConverter.convertNumberToLetter(
                            new SimpleDateFormat("mm").format(Calendar.getInstance().getTime())) + " minutos");
        }
    }
    
    private void setParametersToReportCredito(HashMap parameters) {
        String anio = new SimpleDateFormat("YYYY").format(Calendar.getInstance().getTime());
        String dia = new SimpleDateFormat("dd").format(Calendar.getInstance().getTime());
        anio = NumberToLetterConverter.convertNumberToLetter(anio);
        dia = NumberToLetterConverter.convertNumberToLetter(dia);

        if (parameters != null) {
            // Configuracion
            parameters.put("NOMBRE_REPRE", fileContext.getNombreRepresentante());
            parameters.put("GR", fileContext.getGenero());
            parameters.put("SOCIEDAD", fileContext.getNombreEmpresa());
            parameters.put("SOCIEDAD_ABREV", fileContext.getNombreAbrev());

            // Formulario
            parameters.put("NOMBRE", txtNombres.getText().toUpperCase() + " " + txtApellidos.getText().toUpperCase());
            parameters.put("ANIOS", NumberToLetterConverter.convertNumberToLetter(jSpinner1.getValue().toString()));
            parameters.put("PROFOFI", txtProfesionOfi.getText().toUpperCase());
            parameters.put("MUNI", cmbMunicipios.getSelectedItem());
            parameters.put("DEPA", cmbDepartamentos.getSelectedItem());
            parameters.put("POLIZA", HandleStringsUtils.converNumbersToLetter(txtPoliza.getText().toUpperCase()));
            parameters.put("MARCA", cmbMarca.getSelectedItem());
            parameters.put("MODELO", cmbMarca.getSelectedItem());
            parameters.put("ANIOMOTO", NumberToLetterConverter.convertNumberToLetter(String.valueOf(yearModel.getValue())));
            parameters.put("ANIOLETRA", anio);
            parameters.put("MOTOR", HandleStringsUtils.converNumbersToLetter(txtMotor.getText().toUpperCase()));
            parameters.put("CHASIS", HandleStringsUtils.converNumbersToLetter(txtChasis.getText().toUpperCase()));
            parameters.put("COLOR", txtColor.getText().toUpperCase());
            parameters.put("PRECIO", NumberToLetterConverter.convertNumberToLetter(txtPrecio.getText()));
            parameters.put("VIN", obtenerVIN());
            parameters.put("TIPO", cmbTipo.getSelectedItem());

            if (buttonGroup.getSelection().getActionCommand() == "M") {
                parameters.put("GA", "el");
                parameters.put("G", "or");
            } else {
                parameters.put("GA", "la");
                parameters.put("G", "ora");
            }

            parameters.put("DIA", dia);
            parameters.put("MES", HandleStringsUtils.obtenerMesActual());
            parameters.put("TDOCUMENTO", obtenerImpresionTipoDocumento());
            parameters.put("DUI", HandleStringsUtils.converNumbersToLetter(obtenerImpresionDocumento()));
            parameters.put("NIT", HandleStringsUtils.converNumbersToLetter(obtenerNIT()));

            parameters.put("HORA",
                    NumberToLetterConverter.convertNumberToLetter(
                            new SimpleDateFormat("HH").format(Calendar.getInstance().getTime())) + " Horas");

            parameters.put("MIN",
                    NumberToLetterConverter.convertNumberToLetter(
                            new SimpleDateFormat("mm").format(Calendar.getInstance().getTime())) + " minutos");

            // Obtenemos los valores del formulario de credito
            CreditoModel cred = frmCrd.getData();

            parameters.put("FECHAPLAZOFIN", HandleStringsUtils.construirFechaString(cred.getFechaCompra()));
            parameters.put("PRIMA", NumberToLetterConverter.convertNumberToLetter(cred.getPrima().toString()));
            parameters.put("COUTAS", NumberToLetterConverter.convertNumberToLetter(cred.getPlazos().toString()));
            parameters.put("PRECIO_COUTA", NumberToLetterConverter.convertNumberToLetter(cred.getCouta().toString()));
            parameters.put("INTERES", NumberToLetterConverter.convertNumberToLetter(cred.getInteres().toString()));
            parameters.put("VENCIMIENTO", HandleStringsUtils.construirFechaString(cred.getFechaPlazoFin()));
        }
    }
    
    

    private void setParametersAutIPM(HashMap parameters) {
        String anio = new SimpleDateFormat("YYYY").format(Calendar.getInstance().getTime());
        String dia = new SimpleDateFormat("dd").format(Calendar.getInstance().getTime());
        anio = NumberToLetterConverter.convertNumberToLetter(anio);
        dia = NumberToLetterConverter.convertNumberToLetter(dia);

        if (parameters != null) {
            // Configuracion
            parameters.put("SOCIEDAD", fileContext.getNombreEmpresa());
            // Formulario
            parameters.put("NOMBRE", txtNombres.getText().toUpperCase() + " " + txtApellidos.getText().toUpperCase());
            parameters.put("ANIOS", NumberToLetterConverter.convertNumberToLetter(jSpinner1.getValue().toString()));
            parameters.put("PROFOFI", txtProfesionOfi.getText().toUpperCase());
            parameters.put("MUNI", cmbMunicipios.getSelectedItem());
            parameters.put("DEPA", cmbDepartamentos.getSelectedItem());
            parameters.put("POLIZA", HandleStringsUtils.converNumbersToLetter(txtPoliza.getText().toUpperCase()));
            parameters.put("MARCA", cmbMarca.getSelectedItem());
            parameters.put("MODELO", cmbMarca.getSelectedItem());
            parameters.put("ANIOMOTO", NumberToLetterConverter.convertNumberToLetter(String.valueOf(yearModel.getValue())));
            parameters.put("ANIOLETRA", anio);
            parameters.put("MOTOR", HandleStringsUtils.converNumbersToLetter(txtMotor.getText().toUpperCase()));
            parameters.put("CHASIS", HandleStringsUtils.converNumbersToLetter(txtChasis.getText().toUpperCase()));
            parameters.put("COLOR", txtColor.getText().toUpperCase());
            parameters.put("PRECIO", NumberToLetterConverter.convertNumberToLetter(txtPrecio.getText()));

            // Obtienes el mes actual
            Month month = LocalDate.now().getMonth();

            // Obtienes el nombre del mes
            String nombreMes = month.getDisplayName(TextStyle.FULL, new Locale("es", "ES"));

            parameters.put("DIA", dia);
            parameters.put("MES", nombreMes.toUpperCase());
            parameters.put("TDOCUMENTO", obtenerImpresionTipoDocumento());
            parameters.put("DUI", HandleStringsUtils.converNumbersToLetter(obtenerImpresionDocumento()));
            parameters.put("NIT", HandleStringsUtils.converNumbersToLetter(obtenerNIT()));
        }
    }

    private void disabledRadioButtonDocumento(boolean value) {
        Enumeration<AbstractButton> enumeration = btnDocumentoPer.getElements();
        while (enumeration.hasMoreElements()) {
            enumeration.nextElement().setEnabled(value);
        }

        btnDocumentoPer.clearSelection();
    }

    private String obtenerImpresionDocumento() {
        String ret = "";

        if (chkDui.getState()/*is checked*/) {
            ret = txtDUI.getText();
        } else {
            ret = txtPasaporte.getText();
        }

        return ret;
    }

    private String obtenerImpresionTipoDocumento() {
        String ret = "";

        if (chkDui.getState()/*is checked*/) {
            ret = "Documento Único de identidad";
        } else {
            if (btnDocumentoPer.getSelection().getActionCommand() == "PASAPORTE") {
                ret = "Número de Pasaporte";
            } else {
                ret = "Carnet de Residente";
            }
        }

        return ret;
    }

    private String obtenerNIT() {
        String ret = "";

        if ("".equals(txtNIT.getText().replace("-", "").trim())) {
            ret = obtenerImpresionDocumento();
        } else {
            ret = txtNIT.getText();
        }

        return ret;
    }

    private String obtenerVIN() {
        String ret = "";

        if (chkVIN.getState()) {
            ret = "N/T DE FABRICA";
        } else {
            ret = HandleStringsUtils.converNumbersToLetter(txtVIN.getText().trim());
        }

        return ret;
    }

    public void jYearChooser() {
        String anio = new SimpleDateFormat("YYYY").format(Calendar.getInstance().getTime());
        int anioInt = Integer.parseInt(anio);

        yearModel.setMinimum(anioInt - 3);
        yearModel.setMaximum(anioInt + 1);
        yearModel.setValue(anioInt);
    }
    
}
